name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  # Skip draft PRs
  skip-draft:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == true
    steps:
      - name: Skip draft PR
        run: echo "Skipping draft PR"

  # Validate PR title follows conventional commits
  validate-pr:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            test
            chore
            ci
            build
            perf
          scopes: |
            shared
            core
            ui
            server
            client
            docker
            ci
            deps
          requireScope: false

  # Size check
  size-check:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Bundle size analysis
        uses: preactjs/compressed-size-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          build-script: build
          pattern: |
            apps/client/dist/**/*.js
            apps/server/dist/**/*.js

  # Dependency check
  dependency-check:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for duplicate dependencies
        run: |
          npx npm-check-duplicates
          if [ $? -ne 0 ]; then
            echo "❌ Duplicate dependencies found"
            exit 1
          fi

      - name: Check for unused dependencies
        run: |
          npx depcheck --ignore-dirs=dist,build,coverage --ignores="@types/*,vitest,typescript"
          if [ $? -ne 0 ]; then
            echo "⚠️ Unused dependencies found"
            # Don't fail the build, just warn
          fi

  # Visual regression testing (if applicable)
  visual-regression:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false && contains(github.event.pull_request.changed_files, 'apps/client/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build client
        run: npm run build:client

      - name: Run visual regression tests
        run: |
          # Placeholder for visual regression testing
          echo "Visual regression testing would run here"
          # Example: npm run test:visual

  # Performance testing
  performance-test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false && contains(github.event.pull_request.changed_files, 'apps/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build applications
        run: npm run build

      - name: Run performance tests
        run: |
          # Placeholder for performance testing
          echo "Performance testing would run here"
          # Example: npm run test:performance

  # Code quality metrics
  code-quality:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run code complexity analysis
        run: |
          # Install complexity analyzer
          npm install -g complexity-report

          # Analyze complexity
          echo "## Code Complexity Report" > complexity-report.md
          find apps libs packages -name "*.ts" -not -path "*/node_modules/*" -not -path "*/dist/*" | \
            xargs complexity-report --format json > complexity.json

          # Check if complexity is reasonable
          node -e "
            const report = require('./complexity.json');
            const highComplexity = report.reports.filter(r => r.complexity.cyclomatic > 10);
            if (highComplexity.length > 0) {
              console.log('⚠️ High complexity functions found:');
              highComplexity.forEach(r => console.log('- ' + r.path + ':' + r.line));
            }
          "

  # Test coverage check
  coverage-check:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: imaginarium_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/imaginarium_test
          REDIS_URL: redis://localhost:6379

      - name: Check coverage thresholds
        run: |
          # Check if coverage meets minimum thresholds
          coverage=$(node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json'));
            const total = coverage.total;
            console.log(total.lines.pct);
          ")

          if (( $(echo "$coverage < 80" | bc -l) )); then
            echo "❌ Coverage threshold not met: $coverage% (minimum: 80%)"
            exit 1
          else
            echo "✅ Coverage threshold met: $coverage%"
          fi

  # Auto-assign reviewers
  auto-assign:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Auto-assign reviewers
        uses: kentaro-m/auto-assign-action@v1.2.5
        with:
          configuration-path: .github/auto-assign.yml

  # Add labels based on changes
  labeler:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Apply labels
        uses: actions/labeler@v5
        with:
          configuration-path: .github/labeler.yml
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  # Comment with build info
  comment-build-info:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ## 🚀 Build Status

            ✅ This PR has been automatically checked and is ready for review.

            ### Preview Links
            - 🔗 [View deployment preview](https://pr-${{ github.event.number }}.imaginarium.dev) (Coming soon)
            - 📊 [View Storybook](https://pr-${{ github.event.number }}-storybook.imaginarium.dev) (Coming soon)

            ### Quality Checks
            - ✅ Linting and formatting
            - ✅ Type checking
            - ✅ Unit tests
            - ✅ Security scanning
            - ✅ Build verification

            This comment will be updated as the PR changes.
