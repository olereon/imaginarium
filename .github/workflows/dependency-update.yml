name: Dependency Updates

on:
  schedule:
    - cron: '0 8 * * MON' # Run weekly on Monday at 8 AM
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  # Update dependencies
  update-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: Check for updates
        run: |
          echo "Checking for dependency updates..."
          ncu --packageFile package.json --jsonUpgraded > root-updates.json

          # Check each workspace
          for dir in apps/* libs/* packages/*; do
            if [ -d "$dir" ] && [ -f "$dir/package.json" ]; then
              echo "Checking $dir..."
              ncu --packageFile "$dir/package.json" --jsonUpgraded > "$dir-updates.json"
            fi
          done

      - name: Update dependencies
        run: |
          echo "Updating dependencies..."

          # Update root package.json
          if [ -s root-updates.json ] && [ "$(cat root-updates.json)" != "{}" ]; then
            echo "Updating root dependencies..."
            ncu --packageFile package.json -u
          fi

          # Update workspace package.json files
          for dir in apps/* libs/* packages/*; do
            if [ -d "$dir" ] && [ -f "$dir/package.json" ]; then
              if [ -s "$dir-updates.json" ] && [ "$(cat "$dir-updates.json")" != "{}" ]; then
                echo "Updating $dir dependencies..."
                ncu --packageFile "$dir/package.json" -u
              fi
            fi
          done

      - name: Install updated dependencies
        run: npm install

      - name: Run tests
        run: |
          npm run lint:check
          npm run typecheck
          npm run build
          npm run test:run

      - name: Generate update summary
        run: |
          echo "# Dependency Update Summary" > update-summary.md
          echo "" >> update-summary.md

          # Root updates
          if [ -s root-updates.json ] && [ "$(cat root-updates.json)" != "{}" ]; then
            echo "## Root Dependencies" >> update-summary.md
            echo '```json' >> update-summary.md
            cat root-updates.json >> update-summary.md
            echo '```' >> update-summary.md
            echo "" >> update-summary.md
          fi

          # Workspace updates
          for dir in apps/* libs/* packages/*; do
            if [ -d "$dir" ] && [ -f "$dir-updates.json" ]; then
              if [ -s "$dir-updates.json" ] && [ "$(cat "$dir-updates.json")" != "{}" ]; then
                echo "## $dir Dependencies" >> update-summary.md
                echo '```json' >> update-summary.md
                cat "$dir-updates.json" >> update-summary.md
                echo '```' >> update-summary.md
                echo "" >> update-summary.md
              fi
            fi
          done

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(deps): update dependencies'
          title: 'chore(deps): Weekly dependency updates'
          body-path: update-summary.md
          branch: dependency-updates
          delete-branch: true
          labels: dependencies,automated

  # Dependabot PRs auto-merge
  dependabot-auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge minor/patch updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-minor' || steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: |
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Label major updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr edit "$PR_URL" --add-label "needs-review,breaking-change"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Security updates
  security-updates:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: |
          # Fix security vulnerabilities
          npm audit fix --audit-level=moderate

          # Check if any fixes were applied
          if git diff --quiet; then
            echo "No security fixes applied"
            echo "SECURITY_FIXES=false" >> $GITHUB_ENV
          else
            echo "Security fixes applied"
            echo "SECURITY_FIXES=true" >> $GITHUB_ENV
          fi

      - name: Run tests after security fixes
        if: env.SECURITY_FIXES == 'true'
        run: |
          npm run lint:check
          npm run typecheck
          npm run build
          npm run test:run

      - name: Create security update PR
        if: env.SECURITY_FIXES == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'fix(security): apply security updates'
          title: 'fix(security): Security vulnerability fixes'
          body: |
            ## Security Updates Applied

            This PR contains automatic security fixes applied by `npm audit fix`.

            ### What changed:
            - Security vulnerabilities have been automatically fixed
            - Dependencies have been updated to secure versions

            ### Testing:
            - ‚úÖ Linting passed
            - ‚úÖ Type checking passed
            - ‚úÖ Build successful
            - ‚úÖ Tests passed

            This PR should be reviewed and merged promptly to address security concerns.
          branch: security-updates
          delete-branch: true
          labels: security,automated,high-priority

  # Notify about updates
  notify-updates:
    runs-on: ubuntu-latest
    needs: [update-dependencies, security-updates]
    if: always()
    steps:
      - name: Notify about updates
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            üîÑ Dependency Updates Summary

            Repository: ${{ github.repository }}

            Results:
            - Regular updates: ${{ needs.update-dependencies.result == 'success' && '‚úÖ Created PR' || '‚ùå Failed' }}
            - Security updates: ${{ needs.security-updates.result == 'success' && '‚úÖ Applied' || '‚ùå Failed' }}

            Please review and merge the dependency update PRs.
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
